const db = require("../models/db");

// тЬЕ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕г
exports.checkApplied = (req, res) => {
  try {
    const job_id_raw = req.query.job_id || req.params.job_id;
    const applicant_id_raw = req.query.applicant_id || req.params.applicant_id;

    console.log("ЁЯз╛ р╕гр╕▒р╕Ър╕Др╣Ир╕▓р╣Ар╕Кр╣Зр╕Д:", { job_id_raw, applicant_id_raw });

    const job_id = Number(job_id_raw);
    const applicant_id = Number(applicant_id_raw);

    if (isNaN(job_id) || isNaN(applicant_id)) {
      console.warn("тЭМ job_id р╕лр╕гр╕╖р╕н applicant_id р╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З:", { job_id_raw, applicant_id_raw });
      return res.status(400).json({ message: "job_id р╕лр╕гр╕╖р╕н applicant_id р╣Др╕бр╣Ир╕Цр╕╣р╕Бр╕Хр╣Йр╕нр╕З" });
    }

    const sql = `
      SELECT app_status FROM applications
      WHERE job_id = ? AND applicant_id = ?
      AND app_status NOT IN ('cancelled', 'rejected')
      ORDER BY app_date DESC
      LIMIT 1
    `;

    db.query(sql, [job_id, applicant_id], (err, results) => {
      if (err) {
        console.error("тЭМ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з:", err);
        return res.status(500).json({ message: "р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕кр╕Цр╕▓р╕Щр╕░р╕ер╣Йр╕бр╣Ар╕лр╕ер╕з" });
      }

      const app = results[0];
      const status = app?.app_status || null;
      const alreadyApplied = !!app;

      return res.json({ status, alreadyApplied });
    });
  } catch (err) {
    console.error("ЁЯФе Exception:", err);
    return res.status(500).json({ message: "р╣Ар╕Бр╕┤р╕Фр╕Вр╣Йр╕нр╕Ьр╕┤р╕Фр╕Юр╕ер╕▓р╕Ф" });
  }
};






// тЬЕ р╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щ
exports.apply = (req, res) => {
  const job_id = Number(req.body.job_id);
  const applicant_id = Number(req.body.applicant_id);
  const app_portfolio_url = req.body.app_portfolio_url || null;

  if (!job_id || !applicant_id) {
    return res.status(400).json({ message: "р╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕бр╣Ир╕Др╕гр╕Ър╕Цр╣Йр╕зр╕Щ" });
  }

  const checkSql = `
    SELECT * FROM applications
    WHERE job_id = ? AND applicant_id = ?
    AND app_status NOT IN ('cancelled', 'rejected')
    LIMIT 1
  `;

  db.query(checkSql, [job_id, applicant_id], (err, results) => {
    if (err) {
      console.error("тЭМ р╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╕ер╣Йр╕бр╣Ар╕лр╕ер╕з:", err);
      return res.status(500).json({ message: "р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕Хр╕гр╕зр╕Ир╕кр╕нр╕Ър╕Бр╕▓р╕гр╕кр╕бр╕▒р╕Др╕гр╣Др╕Фр╣Й" });
    }

    if (results.length > 0) {
      return res.status(409).json({ message: "р╕Др╕╕р╕Ур╣Др╕Фр╣Йр╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щр╕Щр╕╡р╣Йр╣Др╕Ыр╣Бр╕ер╣Йр╕з" });
    }

    const insertSql = `
      INSERT INTO applications (job_id, applicant_id, app_date, app_status, app_portfolio_url)
      VALUES (?, ?, NOW(), 'pending', ?)
    `;

    db.query(insertSql, [job_id, applicant_id, app_portfolio_url], (err2) => {
      if (err2) {
        console.error("тЭМ р╕Ър╕▒р╕Щр╕Чр╕╢р╕Бр╕Вр╣Йр╕нр╕бр╕╣р╕ер╣Др╕бр╣Ир╕кр╕│р╣Ар╕гр╣Зр╕И:", err2.sqlMessage || err2);
        return res.status(500).json({ message: "р╣Др╕бр╣Ир╕кр╕▓р╕бр╕▓р╕гр╕Цр╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щр╣Др╕Фр╣Й" });
      }

      console.log("тЬЕ р╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И");
      res.status(200).json({ message: "р╕кр╕бр╕▒р╕Др╕гр╕Зр╕▓р╕Щр╕кр╕│р╣Ар╕гр╣Зр╕И" });
    });
  });
};
